{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBAIf,IAAzBC,EAAgB,GAIuF,MAArGC,EAAqBC,aAAaC,QAPd,uBAQtBF,IACFD,EAAgBI,KAAKC,MAAMJ,IAK4B,MAAnDK,EAAkCX,EAAAY,UAAW,WACjDL,aAAaM,QAfW,sBAegBJ,KAAKK,UAAUT,G,GACtD,KAGiCH,EAAvBa,iBAAiB,SAASC,IACrC,GAAIA,EAAMC,OAAOC,QAAQ,mBAAoB,CAC3C,MAAMC,EAAOH,EAAMC,OAAOG,aAAa,QACvCf,EAAcc,GAAQH,EAAMC,OAAOI,MAAMC,OACzCX,G,KAO0BT,EAAjBa,iBAAiB,UAGP,SAAQC,GAC5BA,EAAMO,iBAG6B,MAA7BC,EAAatB,EAAauB,SAAgB,MAC1CC,EAAexB,EAAauB,SAAkB,QAGlB,IAA7BD,EAAWH,MAAMC,SAAWI,EAAaL,MAAMC,OAElD,YADAK,MAAM,0BAKuB,MAAzBC,EAAW,IAAIC,SAASb,EAAMC,QAGL,IAA1B,MAAOa,EAAKT,KAAUO,EACzBvB,EAAcyB,GAAOT,EAAMC,OAITS,QAAZC,IAAI,0BAAgD3B,GAG5DE,aAAa0B,WA1DU,uBA2DvB/B,EAAagC,QACb7B,EAAgB,E","sources":["src/js/03-feedback.js"],"sourcesContent":["const _ = require('lodash');\n\nconst feedbackForm = document.querySelector('.feedback-form');\nconst LOCAL_STORAGE_KEY = 'feedback-form-state';\n\n// Объект с текущим состоянием формы\nlet feedbackState = {};\n\n// Загрузка сохраненного состояния формы при запуске страницы при условии что не будет применена очистка локального хранилища\n\nconst savedFeedbackState = localStorage.getItem(LOCAL_STORAGE_KEY);\nif (savedFeedbackState) {\n  feedbackState = JSON.parse(savedFeedbackState);\n}\n\n\n// Функция для записи текущего состояния формы в локальное хранилище\nconst saveFeedbackStateToLocalStorage = _.throttle(function () {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(feedbackState));\n}, 500);\n\n// Oбработкa события input для локального хранилища....\nfeedbackForm.addEventListener('input', event => {\n  if (event.target.matches('input, textarea')) {\n    const name = event.target.getAttribute('name');\n    feedbackState[name] = event.target.value.trim();\n    saveFeedbackStateToLocalStorage();\n  }\n});\n\n\n// Функция обработки события submit на форме\n\nfeedbackForm.addEventListener('submit', onFeedbackFormSubmit);\n\n//  коллбек функция на сабмит\n function onFeedbackFormSubmit(event) {\n   event.preventDefault();\n\n   // Получение элементов формы по их атрибуту name\n   const emailInput = feedbackForm.elements['email'];\n   const messageInput = feedbackForm.elements['message'];\n\n   // Проверка на заполнение всех полей формы\n   if (!emailInput.value.trim() || !messageInput.value.trim()) {\n     alert('Please fill all fields');\n     return;\n   }\n\n   // Получение данных формы через объект FormData\n   const formData = new FormData(event.target);\n\n   // Обновление объекта feedbackState данными из формы\n   for (const [key, value] of formData) {\n     feedbackState[key] = value.trim();\n   }\n\n   // Вывод обьекта в консоль\n   console.log('Отправленное сообщение:', feedbackState);\n\n   // Очистка локального хранилища, сброс формы и объекта feedbackState\n   localStorage.removeItem(LOCAL_STORAGE_KEY);\n   feedbackForm.reset();\n   feedbackState = {};\n }\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$feedbackForm","document","querySelector","$945622fd0f572e60$var$feedbackState","$945622fd0f572e60$var$savedFeedbackState","localStorage","getItem","JSON","parse","$945622fd0f572e60$var$saveFeedbackStateToLocalStorage","throttle","setItem","stringify","addEventListener","event","target","matches","name","getAttribute","value","trim","preventDefault","emailInput","elements","messageInput","alert","formData","FormData","key","console","log","removeItem","reset"],"version":3,"file":"03-feedback.5e70fef0.js.map"}